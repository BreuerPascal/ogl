#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertex_position_modelspace;
layout(location = 1) in vec3 vertexColor;

// Values that stay constant for the whole mash.
uniform mat4 MVP;

// Output data; will be interpolated for each fragment
out vec3 fragmentColor;

void main(void)
{
    // Output position of the vertex, in clip space : MVP * position
    gl_Position = MVP * vec4(vertex_position_modelspace, 1);

    // The color of each vertex will be interpolated
    // to produce the color of each fragment
    fragmentColor = vertexColor;
}
